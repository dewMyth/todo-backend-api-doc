openapi: 3.0.3
info:
  title: Todo App Backend - Shaki
  description: API doc for the backend that should create with express
  version: 0.1.0
paths:
  "/todos/create":
    post:
      tags: ["Create a Todo"]
      summary: Create a new Todo
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/todo"
      responses:
        "200":
          description: A todo should be created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/todo"

  "/todos/view-all":
    get:
      tags: ["View All the Todos"]
      summary: Returns all todos
      responses:
        "200":
          description: All the posts should be returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/todo"

  "/todos/update/{id}":
    parameters:
      - name: id # Must be same as the value in the {}.
        # Location of the parameter.
        # Can be `path`, `cookie`, `query` or `header`
        in: path
        description: ID of the todo
        # Since this is in the path, the parameter HAS to be required
        required: true
        # Defining the type of the parameter
        schema:
          # In this case, it is just a string
          type: string
    put:
      tags: ["Update a Todo with a given id"]
      summary: Update a todo
      requestBody:
        content:
          application/json:
            schema:
              properties:
                task:
                  type: string
                  description: The task title is only change here!
      responses:
        "200":
          description: Todo should be updated succesfully.

  "/todos/complete/{id}":
    parameters:
      - name: id # Must be same as the value in the {}.
        # Location of the parameter.
        # Can be `path`, `cookie`, `query` or `header`
        in: path
        description: ID of the todo
        # Since this is in the path, the parameter HAS to be required
        required: true
        # Defining the type of the parameter
        schema:
          # In this case, it is just a string
          type: string
    put:
      tags: ["Toggle complete Todo status with a given id"]
      summary: Toggle Complete a todo
      requestBody:
        content:
          application/json:
            schema:
              properties:
                completed:
                  type: boolean
                  description: The task completed status is only change here!
      responses:
        "200":
          description: Todo completed staus should be updated succesfully.

  "/todos/delete/{id}":
    parameters:
      - name: id # Must be same as the value in the {}.
        # Location of the parameter.
        # Can be `path`, `cookie`, `query` or `header`
        in: path
        description: ID of the todo
        # Since this is in the path, the parameter HAS to be required
        required: true
        # Defining the type of the parameter
        schema:
          # In this case, it is just a string
          type: string
    delete:
      tags: ["Delete a Todo with a given id"]
      summary: Toggle Complete a todo
      responses:
        "200":
          description: Todo should be deleted.

components:
  schemas:
    todo:
      type: object
      properties:
        task:
          type: string
          description: The task title
        completed:
          type: boolean
          description: Status of the task. Completed or Not
